[gcode_macro START_PRINT]
description: Pre-Heat the bed and the nozzle, reset Feedrate and Flowrate, home all axes and clean the nozzle

variable_filament_type: 'None'
variable_filament_profile: 'None'
variable_retraction_amount: 0
variable_retraction_speed: 0
variable_firmware_retract: False
variable_initial_detection_length: 0

gcode:
  {% set Z_OFFSET = 0.00 %} # 0.15
  {% set INTELLIGENT_MESH_LOAD = 1 %}
  {% set INTELLIGENT_OFFSET_LOAD = 1 %}
  {% set INTELLIGENT_BEACON_MODEL_LOAD = 1 %}
  {% set DEFAULT_SOAK_TIME = 60 %}
  {% set INITIAL_DETECTION_LENGTH = 50 %}
  {% set EXTRUDER_PRE_HEAT_TEMP = 120 %}

  {% set VOLUME = params.VOLUME|default(1000)|int %}

  {% set FORCE_LIGHT = params.FORCE_LIGHT|default('FALSE')|boolean %}
  {% set ENABLE_BOT_LIGHT = params.ENABLE_BOT_LIGHT|default('TRUE')|boolean %}

  {% set PURGE_LINE = params.PURGE_LINE|default('TRUE')|boolean %}
  {% set DOUBLE_LINE = params.DOUBLE_LINE|default('FALSE')|boolean %}

  {% set FORCE_HOME = params.FORCE_HOME|default('TRUE')|boolean %}

  {% set BED_MESH = params.BED_MESH|default('TRUE')|boolean %}
  {% set TEMP_MESH = params.TEMP_MESH|default('FALSE')|boolean %}
  {% set FORCE_MESH = params.FORCE_MESH|default('TRUE')|boolean %}
  {% set ADAPTIVE_MESH = params.ADAPTIVE_MESH|default('FALSE')|boolean %}
  {% set BED_MESH_PROFILE = params.BED_MESH_PROFILE|default('default')|string %}
  {% set BEACON_MODEL = params.BEACON_MODEL|default('default')|string %}
  {% if not TEMP_MESH %}
    {% set ADAPTIVE_MESH = FALSE|boolean %}
  {% endif %}

  {% set SOAK_TIME = params.SOAK_TIME|default(DEFAULT_SOAK_TIME)|int %}

  {% set SLICER_Z_OFFSET = params.Z_OFFSET|default(0.00)|float %}

  {% set USE_FILAMENT_HEATER_PROFILE = params.FILAMENT_PID_PROFILE|default('TRUE')|boolean %}
  {% set FILAMENT_PROFILE = params.FILAMENT_PROFILE|default('None')|string %}
  {% set FILAMENT_TYPE = params.FILAMENT_TYPE|default('None')|string %}
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=filament_type VALUE="'{ FILAMENT_TYPE }'"
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=filament_profile VALUE="'{ FILAMENT_PROFILE }'"
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=initial_detection_length VALUE="'{ INITIAL_DETECTION_LENGTH }'"

  {% set FIRMWARE_RETRACT = params.FIRMWARE_RETRACT|default('FALSE')|boolean %}

  {% set BRIM = params.BRIM|default(0)|int %}
  {% set SKIRTS = params.SKIRTS|default(0)|int %}

  {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}

  {% if BED_MESH and TEMP_MESH and ADAPTIVE_MESH %}
    {% set PURGE_LINE = 'FALSE'|boolean %}
  {% endif %}
  
  {% if BRIM > 5 %}
    {% set PURGE_LINE = 'FALSE'|boolean %}
  {% endif %}
  
  {% if SKIRTS > 3 %}
    {% set PURGE_LINE = 'FALSE'|boolean %}
  {% endif %}

  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}
  {% set CHAMBER_TEMP = params.CHAMBER_TEMP|default(0)|float %}
  {% set BED_TEMP_FIRST_LAYER = params.BED_TEMP_FIRST_LAYER|default(BED_TEMP)|float %}
  {% set EXTRUDER_TEMP_FIRST_LAYER = params.EXTRUDER_TEMP_FIRST_LAYER|default(EXTRUDER_TEMP)|float %}

  {% if params.BED_TEMP is not defined %}
    RESPOND MSG="!!!BED_TEMP is not defined!!!" color=error
    CANCEL_PRINT
  {% elif params.EXTRUDER_TEMP is not defined %}
    RESPOND MSG="!!!EXTRUDER_TEMP is not defined!!!" color=error
    CANCEL_PRINT
  {% elif printer.save_variables.variables.default_mesh is defined and printer['gcode_macro _MAX_BED_TEMPS'].surfaces[printer.save_variables.variables.default_mesh] is defined and BED_TEMP_FIRST_LAYER > printer['gcode_macro _MAX_BED_TEMPS'].surfaces[printer.save_variables.variables.default_mesh] %}
    RESPOND MSG="!!!Requested first layer bed temp too high for current Build Plate!!!" color=error
    CANCEL_PRINT
  {% elif printer.save_variables.variables.default_mesh is defined and printer['gcode_macro _MAX_BED_TEMPS'].surfaces[printer.save_variables.variables.default_mesh] is defined and BED_TEMP > printer['gcode_macro _MAX_BED_TEMPS'].surfaces[printer.save_variables.variables.default_mesh] %}
    RESPOND MSG="!!!Requested bed temp too high for current Build Plate!!!" color=error
    CANCEL_PRINT
  {% elif not printer['heater_fan hotend_fan'].enabled|boolean %}
    RESPOND MSG="!!!Hotend Fan is disabled!!!" color=error
    CANCEL_PRINT
  {% else %}
    {% if printer['gcode_macro _PROBE_VARIABLES'].max_bed_temp != -1 and BED_TEMP_FIRST_LAYER > printer['gcode_macro _PROBE_VARIABLES'].max_bed_temp %}
      {% set BED_TEMP_LEVELING = printer['gcode_macro _PROBE_VARIABLES'].max_bed_temp %}
    {% else %}
      {% set BED_TEMP_LEVELING = BED_TEMP_FIRST_LAYER %}
    {% endif %}

    {% if printer['gcode_macro _PROBE_VARIABLES'].max_extruder_temp != -1 and EXTRUDER_TEMP_FIRST_LAYER > printer['gcode_macro _PROBE_VARIABLES'].max_extruder_temp %}
      {% set EXTRUDER_TEMP_LEVELING = printer['gcode_macro _PROBE_VARIABLES'].max_extruder_temp %}
    {% else %}
      {% set EXTRUDER_TEMP_LEVELING = EXTRUDER_TEMP_FIRST_LAYER %}
    {% endif %}
      
    {% if params.RETRACTION_AMOUNT is defined and params.RETRACTION_SPEED is defined %}
      {% set RETRACTION_AMOUNT = params.RETRACTION_AMOUNT|float %}
      {% set RETRACTION_SPEED = params.RETRACTION_SPEED|float * 60 %}
    {% else %}
      {% set RETRACTION_AMOUNT = 0.0|float %}
      {% set RETRACTION_SPEED = 0.0|float %}
      {% set FIRMWARE_RETRACT = 'TRUE'|boolean %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=retraction_amount VALUE="'{ RETRACTION_AMOUNT }'"
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=retraction_speed VALUE="'{ RETRACTION_SPEED }'"
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=firmware_retract VALUE="'{ FIRMWARE_RETRACT }'"

    {% if printer['gcode_macro HEAT_SOAK'].stage in ("heating", "soaking") %}
      SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'done'"
    {% endif %}
    
    FANS_OFF

    # {% if ENABLE_BOT_LIGHT %}
    #   SET_GCODE_VARIABLE MACRO=_LIGHT VARIABLE=disable_slicer value=0
    # {% else %}
    #   SET_GCODE_VARIABLE MACRO=_LIGHT VARIABLE=disable_slicer value=1
    # {% endif %}

    HEAT_CHAMBER CHAMBER_TEMP={CHAMBER_TEMP} BED_TEMP={BED_TEMP}

    # {% set BASE_TEMP = printer.heater_bed.temperature %}
    # {% if printer['gcode_macro NOZZLE_LIGHT'].value|int != 0 or FORCE_LIGHT %}
    #   SET_LED_TEMPLATE LED=Nozzle-Light TEMPLATE=bed_heat param_target_temp={BED_TEMP_FIRST_LAYER} param_base_temp={BASE_TEMP}
    # {% elif printer['gcode_macro STATUS_LIGHT'].value|int != 0 %}
    #   SET_LED_TEMPLATE LED=Toolhead Index=1 TEMPLATE=bed_heat param_target_temp={BED_TEMP_FIRST_LAYER} param_base_temp={BASE_TEMP}
    # {% endif %}
  
    M117 Starting up
    BED_MESH_CLEAR INTELLIGENT={INTELLIGENT_OFFSET_LOAD}
    # BEACON_MODEL_SELECT NAME={BEACON_MODEL} INTELLIGENT={INTELLIGENT_BEACON_MODEL_LOAD}
    CLEAR_PAUSE
    M220 S100 ;Reset Feedrate
    M221 S100 ;Reset Flowrate
  
    {% if BED_MESH %}
      {% if not TEMP_MESH %}
        BED_MESH_PROFILE LOAD={BED_MESH_PROFILE} INTELLIGENT={INTELLIGENT_MESH_LOAD} TEMPERATURE_EXTRUDER={EXTRUDER_TEMP} TEMPERATURE_BED={BED_TEMP} FILAMENT_PROFILE='{FILAMENT_PROFILE}'
        {% if INTELLIGENT_MESH_LOAD == 1 and BED_MESH_PROFILE|string == "default" and printer.save_variables.variables.default_mesh is defined %}
          {% set LOADED_MESH = printer.save_variables.variables.default_mesh|string %}
        {% else %}
          {% set LOADED_MESH = BED_MESH_PROFILE %}
        {% endif %}
    
        RESPOND MSG="Using Bed Mesh Profile [{LOADED_MESH}]."
      {% elif ADAPTIVE_MESH %}
        {% set PURGE_LINE = 'FALSE'|boolean %}
      {% endif %}
    {% endif %}
  
    SET_GCODE_OFFSET Z={SLICER_Z_OFFSET + Z_OFFSET} INTELLIGENT={INTELLIGENT_OFFSET_LOAD} TEMPERATURE_EXTRUDER={EXTRUDER_TEMP} TEMPERATURE_BED={BED_TEMP} FILAMENT_PROFILE='{FILAMENT_PROFILE}'

    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_PRE_HEAT_TEMP}
    
    HEAT_BED BED_TEMP={BED_TEMP_LEVELING} SOAK_TIME={SOAK_TIME} FORCE_HOME={FORCE_HOME} HOME=TRUE
  
    _INIT_BED BED_MESH={BED_MESH} TEMP_MESH={TEMP_MESH} FORCE_MESH={FORCE_MESH} FORCE_HOME={FORCE_HOME} ADAPTIVE_MESH={ADAPTIVE_MESH} FL_SIZE={FL_SIZE}
  
    {% if BED_TEMP_FIRST_LAYER > BED_TEMP_LEVELING %}
      HEAT_BED BED_TEMP={BED_TEMP_FIRST_LAYER} SOAK_TIME={SOAK_TIME} HEATUP_POS=TRUE
    {% else %}
      HEAT_BED BED_TEMP={BED_TEMP_FIRST_LAYER} SOAK_TIME=0 HEATUP_POS=TRUE
    {% endif %}
  
    LOOKUP_HEATER_PROFILE FILAMENT_PROFILE='{FILAMENT_PROFILE}' BED_TEMP={BED_TEMP} EXTRUDER_TEMP={EXTRUDER_TEMP} USE_FILAMENT_HEATER_PROFILE={USE_FILAMENT_HEATER_PROFILE} KEEP_TARGET=1 VERBOSE=low
    LOOKUP_PA_PROFILE FILAMENT_PROFILE='{FILAMENT_PROFILE}' VERBOSE=low

    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP_FIRST_LAYER}

    G90
    {% if printer["gcode_macro _PURGE_LINE_VARIABLES"].safe_z is defined %}
      G0 Z{printer["gcode_macro _PURGE_LINE_VARIABLES"].safe_z} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].default_f}
    {% endif %}
    G0 X{printer["gcode_macro _PURGE_LINE_VARIABLES"].heat_up_pos[0]} Y{printer["gcode_macro _PURGE_LINE_VARIABLES"].heat_up_pos[1]} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].default_f}
    G0 Z{printer["gcode_macro _PURGE_LINE_VARIABLES"].heat_up_pos[2]} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].default_f}

    # {% set BASE_TEMP = printer.extruder.temperature %}
    # {% if printer['gcode_macro NOZZLE_LIGHT'].value|int != 0 or FORCE_LIGHT %}
    #   SET_LED_TEMPLATE LED=Nozzle-Light TEMPLATE=nozzle_heat param_target_temp={EXTRUDER_TEMP_FIRST_LAYER} param_base_temp={BASE_TEMP}
    # {% elif printer['gcode_macro STATUS_LIGHT'].value|int != 0 %}
    #   SET_LED_TEMPLATE LED=Toolhead Index=1 TEMPLATE=nozzle_heat param_target_temp={EXTRUDER_TEMP_FIRST_LAYER} param_base_temp={BASE_TEMP}
    # {% endif %}

    M117 Heating Hotend
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP_FIRST_LAYER}

    SET_GCODE_OFFSET Z={SLICER_Z_OFFSET + Z_OFFSET} INTELLIGENT={INTELLIGENT_OFFSET_LOAD} TEMPERATURE_EXTRUDER={EXTRUDER_TEMP} TEMPERATURE_BED={BED_TEMP} FILAMENT_PROFILE='{FILAMENT_PROFILE}'

    # {% if printer['gcode_macro NOZZLE_LIGHT'].value|int != 0 or FORCE_LIGHT %}
    #   NOZZLE_LIGHT_ON
    # {% elif printer['gcode_macro STATUS_LIGHT'].value|int != 0 %}
    #   STATUS_LIGHT_ON
    # {% endif %}

    ENABLE_FILAMENT_SENSOR FILAMENT_TYPE='{FILAMENT_TYPE}' FILAMENT_PROFILE='{FILAMENT_PROFILE}' DETECTION_LENGTH={INITIAL_DETECTION_LENGTH} RUNOUT_DISTANCE=0.0

    SET_HEATER_FAN HEATER_FAN=bed_fan FAN_SPEED=0.4

    M117 Printing

    M83
    G1 E{10 + (RETRACTION_AMOUNT * 3)} F2700
    M82

    {% if PURGE_LINE %}
      ADAPTIVE_PURGE ADAPTIVE={ADAPTIVE_MESH} FIRMWARE_RETRACT={FIRMWARE_RETRACT} RETRACTION_SPEED={RETRACTION_SPEED} RETRACTION_AMOUNT={RETRACTION_AMOUNT} SIZE={FL_SIZE} FORCE_MESH={FORCE_MESH}
    {% else %}
      G0 Z{printer["gcode_macro _PURGE_LINE_VARIABLES"].start_z} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].start_f}
      G91
      G0 X{printer["gcode_macro _PURGE_LINE_VARIABLES"].no_purge_move_x} Y{printer["gcode_macro _PURGE_LINE_VARIABLES"].no_purge_move_y} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].no_purge_move_f}
      G90
      G0 Z{printer["gcode_macro _PURGE_LINE_VARIABLES"].finish_z} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].finish_f}
    {% endif %}
      
    G91
    G0 X{printer["gcode_macro _PURGE_LINE_VARIABLES"].finish_move_x} Y{printer["gcode_macro _PURGE_LINE_VARIABLES"].finish_move_y} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].finish_move_f}
    G90
      
    G92 E0
    M300 V{VOLUME} A3
      
    {% if PURGE_LINE %}
      {% if FIRMWARE_RETRACT %}
        G11
      {% else %}
        M83
        G1 E{RETRACTION_AMOUNT} F{RETRACTION_SPEED}
        M82
      {% endif %}
      G92 E0

      SET_FILAMENT_SENSOR SENSOR=Runout DETECTION_LENGTH={printer['filament_motion_sensor Runout'].detection_length}
    {% endif %}
    G90

  {% endif %}

[gcode_macro HEAT_CHAMBER]
gcode:
  {% if printer["gcode_macro _PRINT_VARIABLES"].chamber_sensor is defined %}
    {% set CHAMBER_TEMP = params.CHAMBER_TEMP|default(0)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set chamber_sensor = printer["gcode_macro _PRINT_VARIABLES"].chamber_sensor %}
    {% if CHAMBER_TEMP > 0 and CHAMBER_TEMP <= 40 and printer[chamber_sensor].temperature < (CHAMBER_TEMP - 5) %}
      M117 Heating Chamber
      SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
      G28 Z0
      G90
      G0 Z50
      TEMPERATURE_WAIT SENSOR='{chamber_sensor}' MINIMUM={CHAMBER_TEMP}
    {% endif %}
  {% endif %}
  
[gcode_macro HEAT_BED]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set SOAK_TIME = params.SOAK_TIME|default(60)|int %}
  {% set HOME = params.HOME|default('FALSE')|boolean %}
  {% set FORCE_HOME = params.FORCE_HOME|default('TRUE')|boolean %}
  {% set HEATUP_POS = params.HEATUP_POS|default('FALSE')|boolean %}
  {% set ACTUAL_TEMP = printer.heater_bed.temperature|float %}

  {% if ACTUAL_TEMP < BED_TEMP %}
    M117 Heating Bed
  {% else %}
    M117 Cooling Bed
  {% endif %}
  
  LOOKUP_HEATER_PROFILE BED_TEMP={BED_TEMP} KEEP_TARGET=1 VERBOSE=low
  
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

  {% if HOME %}
    {% if FORCE_HOME %}
      G28
    {% else %}
      G28 X0 Y0 Z0
    {% endif %}
  {% endif %}

  {% if HEATUP_POS %}
    G90
    G0 X{printer["gcode_macro _PRINT_VARIABLES"].heatup_pos[0]} Y{printer["gcode_macro _PRINT_VARIABLES"].heatup_pos[1]} Z{printer["gcode_macro _PRINT_VARIABLES"].heatup_pos[2]}
  {% endif %}
  
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP - 0.5} MAXIMUM={BED_TEMP + 1}

  {% if BED_TEMP > 0 and SOAK_TIME > 0 %}
    {% for i in range(SOAK_TIME) %}
      {% set remaining = SOAK_TIME - i %}
      M117 Soaking: {"%02d:%02d" % (remaining // 60, remaining % 60)}
      G4 P1000
    {% endfor %}
    M117 SOAKING: 00:00
  {% endif %}

[gcode_macro _INIT_BED]
gcode:
  {% set BED_MESH = params.BED_MESH|default('FALSE')|boolean %}
  {% set TEMP_MESH = params.TEMP_MESH|default('FALSE')|boolean %}
  {% set FORCE_MESH = params.FORCE_MESH|default('TRUE')|boolean %}
  {% set ADAPTIVE_MESH = params.ADAPTIVE_MESH|default('FALSE')|boolean %}
  {% set FORCE_HOME = params.FORCE_HOME|default('TRUE')|boolean %}
  {% set FL_SIZE = params.FL_SIZE|default("0_0_0_0")|string %}

  M117 Z-Tilt
  ADJUST_Z_TILT FORCE={FORCE_HOME} FORCE_HOME=FALSE PARK=FALSE

  {% if BED_MESH and TEMP_MESH %}
    {% if ADAPTIVE_MESH %}
      M117 Leveling
      RESPOND MSG="Generating adaptive Bed Mesh."
      ADAPTIVE_BED_MESH SIZE={FL_SIZE} FORCE_MESH={FORCE_MESH}
    {% else %}
      M117 Leveling
      RESPOND MSG="Generating new Bed Mesh."
      BED_MESH_CALIBRATE PROFILE=print
    {% endif %}
  {% endif %}
