[gcode_macro START_PRINT_NEW]
description: Pre-Heat the bed and the nozzle, reset Feedrate and Flowrate, home all axes and clean the nozzle
gcode:
  {% set Z_OFFSET = 0.00 %} # 0.15

  {% set VOLUME = params.VOLUME|default(1000)|int %}


  {% set PURGE_LINE = params.PURGE_LINE|default('TRUE')|string %}
  {% set DOUBLE_LINE = params.DOUBLE_LINE|default('FALSE')|string %}

  {% set FORCE_HOME = params.FORCE_HOME|default('TRUE')|string %}


  {% set SOAK_TIME = params.SOAK_TIME|default(60)|int %}

  {% set SLICER_Z_OFFSET = params.Z_OFFSET|default(0.00)|float %}

  {% set USE_FILAMENT_PID_PROFILE = params.FILAMENT_PID_PROFILE|default('TRUE')|string %}
  {% set FILAMENT_PROFILE = params.FILAMENT_PROFILE|default('none')|string %}

  {% set FIRMWARE_RETRACT = params.FIRMWARE_RETRACT|default('FALSE')|string %}

  {% set BRIM = params.BRIM|default(0)|int %}
  {% set SKIRTS = params.SKIRTS|default(0)|int %}

  {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}

  {% if BED_MESH == 'TRUE' and ADAPTIVE_MESH == 'TRUE' %}
    {% set PURGE_LINE = 'FALSE' %}
  {% endif %}
  
  {% if BRIM > 5 %}
    {% set PURGE_LINE = 'FALSE' %}
  {% endif %}
  
  {% if SKIRTS > 3 %}
    {% set PURGE_LINE = 'FALSE' %}
  {% endif %}

  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}

  {% if params.RETRACTION_AMOUNT is defined and params.RETRACTION_SPEED is defined %}
    {% set RETRACTION_AMOUNT = params.RETRACTION_AMOUNT|float %}
    {% set RETRACTION_SPEED = params.RETRACTION_SPEED|float * 60 %}
  {% else %}
    {% set RETRACTION_AMOUNT = 0|float %}
    {% set RETRACTION_SPEED = 0|float %}
    {% set FIRMWARE_RETRACT = 'TRUE'|string %}
  {% endif %}

  M106 S0

  LOOKUP_PID_PROFILE FILAMENT_PROFILE={FILAMENT_PROFILE} BED_TEMP={BED_TEMP} EXTRUDER_TEMP={EXTRUDER_TEMP} USE_FILAMENT_PID_PROFILE={USE_FILAMENT_PID_PROFILE} VERBOSE=low

  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

  M117 Starting up
  CLEAR_PAUSE
  M220 S100 ;Reset Feedrate
  M221 S100 ;Reset Flowrate

  M117 Homing
  {% if FORCE_HOME == 'TRUE' %}
    G28 P0
  {% else %}
    G28 X0 Y0 Z0 P0
  {% endif %}

  SET_GCODE_OFFSET Z={SLICER_Z_OFFSET + Z_OFFSET}

  G90
  {% if printer["gcode_macro _PURGE_LINE_VARIABLES"].safe_z is defined %}
    G0 Z{printer["gcode_macro _PURGE_LINE_VARIABLES"].safe_z} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].default_f}
  {% endif %}
  G0 X{printer["gcode_macro _PURGE_LINE_VARIABLES"].heat_up_pos[0]} Y{printer["gcode_macro _PURGE_LINE_VARIABLES"].heat_up_pos[1]} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].default_f}
  G0 Z{printer["gcode_macro _PURGE_LINE_VARIABLES"].heat_up_pos[2]} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].default_f}

  M117 Heating Bed

  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP}

  {% if BED_TEMP > 0 %}
    {% for i in range(SOAK_TIME) %}
      {% set remaining = SOAK_TIME - i %}
      M117 Soaking: {"%02d:%02d" % (remaining // 60, remaining % 60)}
      G4 P1000
    {% endfor %}
  {% endif %}

  # Set and wait for nozzle to reach temperature
  M117 Heating Hotend
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  
  M117 Z-Tilt
  ATTACH_PROBE
  Z_TILT_ADJUST_BASE
  UNLOCK_DOCKING
  _CHECK_PROBE action=attach
  G28 X0 Y0 Z P0

  M117 Waiting for Hotend
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP}

  SET_GCODE_OFFSET Z={SLICER_Z_OFFSET + Z_OFFSET}

  ENABLE_FILAMENT_SENSOR

  M117 Printing

  M83
  G1 E2 F2700
  M82

  {% if PURGE_LINE|upper == 'TRUE' %}
    # Move to start position
    G0 Z{printer["gcode_macro _PURGE_LINE_VARIABLES"].start_z} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].start_f}
    G91
    G0 X{printer["gcode_macro _PURGE_LINE_VARIABLES"].start_move_x} Y{printer["gcode_macro _PURGE_LINE_VARIABLES"].start_move_y} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].start_move_f}
    G90

    # Move the Z Axis up
    G0 Z{printer["gcode_macro _PURGE_LINE_VARIABLES"].line_height}
    # Draw the first line
    G91
    G1 X{printer["gcode_macro _PURGE_LINE_VARIABLES"].first_line_x} Y{printer["gcode_macro _PURGE_LINE_VARIABLES"].first_line_y} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].first_line_f} E{printer["gcode_macro _PURGE_LINE_VARIABLES"].first_line_e}
    G90
    {% if DOUBLE_LINE|upper == 'TRUE' %}
      # Move to side a little
      G91
      G0 X{printer["gcode_macro _PURGE_LINE_VARIABLES"].second_move_x} Y{printer["gcode_macro _PURGE_LINE_VARIABLES"].second_move_y} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].second_move_f}
      # Draw the second line
      G1 X{printer["gcode_macro _PURGE_LINE_VARIABLES"].second_line_x} Y{printer["gcode_macro _PURGE_LINE_VARIABLES"].second_line_y} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].second_line_f} E{printer["gcode_macro _PURGE_LINE_VARIABLES"].second_line_e}
      G90
    {% endif %}

    {% if FIRMWARE_RETRACT|upper == 'TRUE' %}
      G10
      G91
      G0 X{printer["gcode_macro _PURGE_LINE_VARIABLES"].wipe_move_x} Y{printer["gcode_macro _PURGE_LINE_VARIABLES"].wipe_move_y} Z{printer["gcode_macro _PURGE_LINE_VARIABLES"].wipe_move_z} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].wipe_move_f}
      G90
    {% else %}
      G91
      G0 X{printer["gcode_macro _PURGE_LINE_VARIABLES"].wipe_move_x} Y{printer["gcode_macro _PURGE_LINE_VARIABLES"].wipe_move_y} Z{printer["gcode_macro _PURGE_LINE_VARIABLES"].wipe_move_z} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].wipe_move_f} E{RETRACTION_AMOUNT * -1}
      G90
    {% endif %}

    G0 Z{printer["gcode_macro _PURGE_LINE_VARIABLES"].finish_z} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].finish_f}
  {% else %}
    G0 Z{printer["gcode_macro _PURGE_LINE_VARIABLES"].start_z} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].start_f}
    G91
    G0 X{printer["gcode_macro _PURGE_LINE_VARIABLES"].no_purge_move_x} Y{printer["gcode_macro _PURGE_LINE_VARIABLES"].no_purge_move_y} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].no_purge_move_f}
    G90
    G0 Z{printer["gcode_macro _PURGE_LINE_VARIABLES"].finish_z} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].finish_f}
  {% endif %}

  G91
  G0 X{printer["gcode_macro _PURGE_LINE_VARIABLES"].finish_move_x} Y{printer["gcode_macro _PURGE_LINE_VARIABLES"].finish_move_y} F{printer["gcode_macro _PURGE_LINE_VARIABLES"].finish_move_f}
  G90

  # Reset Extruder
  G92 E0
  M300 V{VOLUME} A3

  {% if PURGE_LINE|upper == 'TRUE' %}
    {% if FIRMWARE_RETRACT|upper == 'TRUE' %}
      G11
    {% else %}
      M83
      G1 E{RETRACTION_AMOUNT} F{RETRACTION_SPEED}
      M82
    {% endif %}
    G92 E0
  {% endif %}

[gcode_macro START_PRINT]
description: Pre-Heat the bed and the nozzle, reset Feedrate and Flowrate, home all axes and clean the nozzle
gcode:  
  {% set PURGE_LINE = params.PURGE_LINE|default('TRUE')|string %}
  {% set DOUBLE_LINE = params.DOUBLE_LINE|default('FALSE')|string %}
  {% set FORCE_HOME = params.FORCE_HOME|default('TRUE')|string %}
  {% set SOAK_TIME = params.SOAK_TIME|default(180)|int %}
  {% set BED_PRE_HEAT_OFFSET = params.BED_PRE_HEAT_OFFSET|default(15)|int %}
  {% set FIRMWARE_RETRACT = params.FIRMWARE_RETRACT|default('FALSE')|string %}
  {% set BRIM = params.BRIM|default(0)|int %}
  {% set SKIRTS = params.SKIRTS|default(0)|int %}
  
  {% if BRIM > 5 %}
    {% set PURGE_LINE = 'FALSE' %}
  {% endif %}
  
  {% if SKIRTS > 3 %}
    {% set PURGE_LINE = 'FALSE' %}
  {% endif %}

  {% set BED_TEMP = params.BED_TEMP|default(65)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}

  {% if 'RETRACTION_AMOUNT' in params|upper %}
    {% set RETRACTION_AMOUNT = params.RETRACTION_AMOUNT|float %}
  {% else %}
    {% set RETRACTION_AMOUNT = 0|float %}
    {% set FIRMWARE_RETRACT = 'TRUE'|string %}
  {% endif %}

  {% if 'RETRACTION_SPEED' in params|upper %}
    {% set RETRACTION_SPEED = params.RETRACTION_SPEED|float * 60 %}
  {% else %}
    {% set RETRACTION_SPEED = 0|float %}
    {% set FIRMWARE_RETRACT = 'TRUE'|string %}
  {% endif %}

  PID_PROFILE LOAD=260 HEATER=extruder DEFAULT=default VERBOSE=low
  PID_PROFILE LOAD=100 HEATER=heater_bed DEFAULT=default VERBOSE=low

  M117 Starting up
  # Reset the G-Code Z offset (adjust Z offset if needed)
  SET_GCODE_OFFSET Z=0.00
  M220 S100 ;Reset Feedrate
  M221 S100 ;Reset Flowrate

  # PID_PROFILE LOAD=275 HEATER=extruder DEFAULT=default VERBOSE={VERBOSE}
  # PID_PROFILE LOAD=95 HEATER=heater_bed DEFAULT=default VERBOSE={VERBOSE}

  M117 Leveling
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=60 MAXIMUM=61
  # Home the printer
  {% if FORCE_HOME == 'TRUE' %}
    LOCK_DOCKING
    G28 P0
    _CHECK_PROBE action=attach
    Z_TILT_ADJUST_BASE
    UNLOCK_DOCKING
    _CHECK_PROBE action=attach
    G28 X0 Y0 Z P0
  {% else %}
    G28 X0 Y0 Z0 P0
  {% endif %}


  M117 Heating up

  # Wait for bed to reach temperature
  M190 S{BED_TEMP}

  {% if BED_TEMP > 0 %}
    {% for i in range(SOAK_TIME) %}
      {% set remaining = SOAK_TIME - i %}
      M117 Starting in {remaining}s
      G4 P1000
    {% endfor %}
  {% endif %}

  # Set and wait for nozzle to reach temperature
  M109 S{EXTRUDER_TEMP}
  # Zero Extruder
  G92 E0

  ENABLE_FILAMENT_SENSOR

  M117 Printing
  # G4 P60000
  
  G90
  G1 Z20
  G1 X0 F5000
  G1 Y0 F5000

  M83
  G1 E2 F2700
  M82

  {% if PURGE_LINE|upper == 'TRUE' %}
    # Move to start position
    # Move the Z Axis up
    G1 Z0.28
    # Draw the first line
    G91
    G1 X180 F1500 E15
    G90
    {% if DOUBLE_LINE|upper == 'TRUE' %}
      # Move to side a little
      G91
      G1 Y1 F5000
      # Draw the second line
      G1 X-180 F1500 E15
      G90
    {% endif %}

    {% if FIRMWARE_RETRACT|upper == 'TRUE' %}
      G10
    {% else %}
      M83
      G1 E{RETRACTION_AMOUNT * -1} F{RETRACTION_SPEED}
      M82
    {% endif %}
    # Move Z Axis up
    G1 Z2.0 F3000

    G91
    G1 Y1 F5000
    G90

    G4 P1000
    
    {% if FIRMWARE_RETRACT|upper == 'TRUE' %}
      G11
    {% else %}
      M83
      G1 E{RETRACTION_AMOUNT} F{RETRACTION_SPEED}
      M82
    {% endif %}
  {% endif %}

  G90
  # Reset Extruder
  G92 E0


[gcode_macro END_PRINT]
description: Put the bed in a accessibly position after printing is done
gcode:
  {% set FIRMWARE_RETRACT = params.FIRMWARE_RETRACT|default('FALSE')|string %}

  {% if 'RETRACTION_AMOUNT' in params|upper %}
    {% set RETRACTION_AMOUNT = params.RETRACTION_AMOUNT|float %}
  {% else %}
    {% set RETRACTION_AMOUNT = 0|float %}
    {% set FIRMWARE_RETRACT = 'TRUE'|string %}
  {% endif %}

  {% if 'RETRACTION_SPEED' in params|upper %}
    {% set RETRACTION_SPEED = params.RETRACTION_SPEED|float * 60 %}
  {% else %}
    {% set RETRACTION_SPEED = 0|float %}
    {% set FIRMWARE_RETRACT = 'TRUE'|string %}
  {% endif %}

  {% if printer.toolhead.position.x < 150 %}
    {% set x = 0.5|float %}
  {% else %}
    {% set x = -0.5|float %}
  {% endif %}

  {% if printer.toolhead.position.y < 150 %}
    {% set y = 0.5|float %}
  {% else %}
    {% set y = -0.5|float %}
  {% endif %}

  {% if printer.toolhead.position.z < (printer.toolhead.axis_maximum.z - 10) %}
    {% set z1 = 5 %}
    {% set z2 = 5 %}
  {% elif printer.toolhead.position.z < (printer.toolhead.axis_maximum.z - 5) %}
    {% set z1 = 5 %}
    {% set z2 = printer.toolhead.axis_maximum.z  - printer.toolhead.position.z - 5 %}
  {% else %}
    {% set z1 = printer.toolhead.axis_maximum.z  - printer.toolhead.position.z %}
    {% set z2 = 0 %}
  {% endif %}

  M400
  {% if FIRMWARE_RETRACT|upper == 'TRUE' %}
    G10
  {% else %}
    G91
    G1 X{x} Y{y} Z{z1} E{RETRACTION_AMOUNT * -1} F{RETRACTION_SPEED}
    G90
  {% endif %}

  G91
  G1 X{x} Y{y} Z{z2} E-2 F2400
  G90

  M117 Done
  TURN_OFF_HEATERS

  G1 X{printer.configfile.settings.stepper_x.position_endstop - 5} Y{printer.configfile.settings.stepper_y.position_endstop - 5} F5000
  G1 Z{printer.configfile.settings.stepper_z.position_max} F5000

  G92 E0
  
  M18
  M106 S0
  DISABLE_FILAMENT_SENSOR
  CLEAR_PAUSE
  SET_GCODE_OFFSET Z=0.00
  UPDATE_DELAYED_GCODE ID=RESET_FILE DURATION=35


[gcode_macro PAUSE]
description: Pause the current running print
rename_existing: PAUSE_BASE
gcode:
  {% set Z = params.Z|default(10)|int %}                                               

  {% if printer['pause_resume'].is_paused|int == 0 %}
    DISABLE_FILAMENT_SENSOR

    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={Z}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}

    SAVE_GCODE_STATE NAME=PAUSE
    PAUSE_BASE
    {% if (printer.gcode_move.position.z + Z) < printer.toolhead.axis_maximum.z %}
      G91
      G1 Z{Z} F900
    {% else %}
      { action_respond_info("Pause zhop exceeds maximum Z height.") }
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
    {% endif %}
    G90
    G0 X{printer["gcode_macro _PARK_VARIABLES"].park_pos[0]} Y{printer["gcode_macro _PARK_VARIABLES"].park_pos[1]} F6000
    SAVE_GCODE_STATE NAME=PAUSEPARK
    SET_HEATER_TEMPERATURE HEATER=extruder
  {% endif %}

[gcode_macro RESUME]
rename_existing: RESUME_BASE
variable_zhop: 0
variable_etemp: 0
gcode:
  {% set E = params.E|default(2.5)|int %}

  {% if printer['pause_resume'].is_paused|int == 1 %}
    {% if etemp > 0 %}
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int}
    {% endif %}
    RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
    G91
    M83
    {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
      G1 Z{zhop * -1} E{E} F900
    {% else %}
      G1 Z{zhop * -1} F900
    {% endif %}
    RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
    RESUME_BASE
    ENABLE_FILAMENT_SENSOR
  {% endif %}

[gcode_macro CANCEL_PRINT]
description: Cancel the current running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  END_PRINT
  CANCEL_PRINT_BASE
