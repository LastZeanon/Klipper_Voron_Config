[gcode_macro KLICKY_RESET_STATES]
gcode:
    SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=probe_state VALUE={ True }
    SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=probe_attached VALUE={ False }
    SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=docking_locked VALUE={ False }
    SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=attaching_locked VALUE={ False }


[gcode_macro _CHECK_PROBE]
gcode:
    Query_Probe
    _SetProbeState action={ params.ACTION }

[gcode_macro _SetProbeState]
gcode:
  __SetProbeState action={ params.ACTION }

# Due to how templates are evaluated, we have query endstops in one
# macro and call another macro to make decisions based on the result
[gcode_macro __SetProbeState]
gcode:
    {% set query_probe_triggered = printer.probe.last_query %}
    {% set action  = params.ACTION|default('') %}
    {% set state = params.STATE|default('') %}
    
    # If triggered (true), probe not attached
    {% if query_probe_triggered %}
        SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=probe_attached VALUE={ False }
    {% else %}
    # If not triggered (false), probe attached
        SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=probe_attached VALUE={ True }
    {% endif %}

    {% if action == 'query' %}
        SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=probe_state VALUE={query_probe_triggered}
    {% endif %}

    # If probe fails to attach/detach

    # If not docked
    {% if not query_probe_triggered and action == 'dock' %}
        {action_emergency_stop("Probe dock failed!")}
    {% endif %}
    {% if not query_probe_triggered and state == 'docked' %}
        {action_emergency_stop("Probe not docked!")}
    {% endif %}

    # If not attached
    {% if query_probe_triggered and action == 'attach' %}
        {action_emergency_stop("Probe attach failed!")}
    {% endif %}
    {% if query_probe_triggered and state == 'attached' %}
        {action_emergency_stop("Probe not attached!")}
    {% endif %}
    
[gcode_macro _Move_To_Dock]
gcode:
    {% if printer.toolhead.position.z|float<printer["gcode_macro _KLICKY_VARIABLES"].probe_z_hop|float %}
        G91
        G0 Z{printer["gcode_macro _KLICKY_VARIABLES"].probe_z_hop}
    {% endif %}
    
    G90

    G0 X{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_first[0]} Y{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_first[1]} F5000
    G0 X{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_second[0]} Y{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_second[1]} F2500
    G0 X{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_final[0]} Y{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_final[1]} F1000
    
    G4 P100


[gcode_macro ATTACH_PROBE]
gcode:
    {% set RETURN_TO_POSITION = params.RETURN_TO_POSITION|default('TRUE')|string %}
    {% set FORCE_ATTACH = params.FORCE_ATTACH|default('FALSE')|string %}
    _CHECK_PROBE action=query
    _ATTACH_PROBE RETURN_TO_POSITION={RETURN_TO_POSITION} FORCE_ATTACH={FORCE_ATTACH}

[gcode_macro _ATTACH_PROBE]
gcode:
    {% set RETURN_TO_POSITION = params.RETURN_TO_POSITION|default('TRUE')|string %}
    {% set FORCE_ATTACH = params.FORCE_ATTACH|default('FALSE')|string %}
    {% if not printer["gcode_macro _KLICKY_DATABASE"].attaching_locked %}
      {% if not printer["gcode_macro _KLICKY_DATABASE"].probe_attached or FORCE_ATTACH|upper == 'TRUE' %}
        G28 X0 Y0
        __ATTACH_PROBE RETURN_TO_POSITION={RETURN_TO_POSITION} FORCE_ATTACH={FORCE_ATTACH}
      {% else %}
        RESPOND MSG="Probe already attached" COLOR=warning
      {% endif %}
    {% else %}
        RESPOND MSG="Probe locked" COLOR=warning
    {% endif %}

[gcode_macro __ATTACH_PROBE]
gcode:
    {% if not printer["gcode_macro _KLICKY_DATABASE"].attaching_locked %}
        {% set RETURN_TO_POSITION = params.RETURN_TO_POSITION|default('TRUE')|string %}
        {% set FORCE_ATTACH = params.FORCE_ATTACH|default('FALSE')|string %}
        {% if RETURN_TO_POSITION|upper == 'TRUE' %}
            {% set X = printer.toolhead.position.x %}
            {% set Y = printer.toolhead.position.y %}
        {% endif %}
        
        _CHECK_PROBE action=query
        ___ATTACH_PROBE FORCE_ATTACH={FORCE_ATTACH}

        _CHECK_PROBE action=query
        _RETRY_ATTACH

        {% if RETURN_TO_POSITION|upper == 'TRUE' %}
            G0 X{X} Y{Y} F5000
        {% endif %}
    {% else %}
        RESPOND MSG="Probe locked" COLOR=warning
    {% endif %}

[gcode_macro _RETRY_ATTACH]
gcode:
  {% if not printer["gcode_macro _KLICKY_DATABASE"].probe_attached %}
    RESPOND MSG="Probe attach failed!" color=error
    {% set retries = printer["gcode_macro _KLICKY_VARIABLES"].retries %}
    {% for i in range(retries) %}
      __RETRY_ATTACH I={i} RETRIES={retries}
      {% if i < retries - 1 %}
        _CHECK_PROBE action=query
      {% else %}
        _CHECK_PROBE action=attach
      {% endif %}
    {% endfor %}
  {% endif %}

[gcode_macro __RETRY_ATTACH]
gcode:
  {% set i = params.I|default(0)|int %}
  {% set retries = params.RETRIES|default(0)|int %}
  {% if not printer["gcode_macro _KLICKY_DATABASE"].probe_attached %}
    RESPOND MSG="Retry {i + 1}/{retries}" color=error

    ___DOCK_PROBE FORCE_DOCK=TRUE
    ___ATTACH_PROBE FORCE_ATTACH=TRUE
  {% endif %}

[gcode_macro ___ATTACH_PROBE]
gcode:
  {% set FORCE_ATTACH = params.FORCE_ATTACH|default('False')|string %}
  {% if not printer["gcode_macro _KLICKY_DATABASE"].probe_attached or FORCE_ATTACH|upper == 'TRUE' %}
    _Move_To_Dock
    {% set order = printer["gcode_macro _KLICKY_VARIABLES"].attach_probe_order.split(',') %}

    {% if order[0]|upper == 'X' %}
        G0 X{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[0]} F2500
    {% else %}
        G0 Y{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[1]} F2500
    {% endif %}

    {% if order[1]|upper == 'X' %}
        G0 X{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[0]} F2500
    {% else %}
        G0 Y{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[1]} F2500
    {% endif %}
  {% else %}
    RESPOND MSG="Probe already attached" COLOR=warning
  {% endif %}


[gcode_macro DOCK_PROBE]
gcode:
    {% set RETURN_TO_POSITION = params.RETURN_TO_POSITION|default('TRUE')|string %}
    {% set FORCE_DOCK = params.FORCE_DOCK|default('FALSE')|string %}
    _CHECK_PROBE action=query
    _DOCK_PROBE RETURN_TO_POSITION={RETURN_TO_POSITION} FORCE_DOCK={FORCE_DOCK}

[gcode_macro _DOCK_PROBE]
gcode:
    {% set RETURN_TO_POSITION = params.RETURN_TO_POSITION|default('TRUE')|string %}
    {% set FORCE_DOCK = params.FORCE_DOCK|default('FALSE')|string %}
    {% if not printer["gcode_macro _KLICKY_DATABASE"].docking_locked %}
      {% if printer["gcode_macro _KLICKY_DATABASE"].probe_attached or FORCE_DOCK|upper == 'TRUE' %}
        G28 X0 Y0
        __DOCK_PROBE RETURN_TO_POSITION={RETURN_TO_POSITION} FORCE_DOCK={FORCE_DOCK}
      {% else %}
        RESPOND MSG="Probe already docked" COLOR=warning
      {% endif %}
    {% else %}
        RESPOND MSG="Probe locked" COLOR=warning
    {% endif %}

[gcode_macro __DOCK_PROBE]
gcode:
    {% if not printer["gcode_macro _KLICKY_DATABASE"].docking_locked %}
        {% set RETURN_TO_POSITION = params.RETURN_TO_POSITION|default('TRUE')|string %}
        {% set FORCE_DOCK = params.FORCE_DOCK|default('FALSE')|string %}
        {% if RETURN_TO_POSITION|upper == 'TRUE' %}
            {% set X = printer.toolhead.position.x %}
            {% set Y = printer.toolhead.position.y %}
        {% endif %}

        _CHECK_PROBE action=query
        ___DOCK_PROBE FORCE_DOCK={FORCE_DOCK}

        _CHECK_PROBE action=query
        _RETRY_DOCK

        {% if RETURN_TO_POSITION|upper == 'TRUE' %}
            G0 X{X} Y{Y} F5000
        {% endif %}
    {% else %}
        RESPOND MSG="Probe locked" COLOR=warning
    {% endif %}

[gcode_macro _RETRY_DOCK]
gcode:
  {% if printer["gcode_macro _KLICKY_DATABASE"].probe_attached %}
    RESPOND MSG="Probe dock failed!" color=error
    {% set retries = printer["gcode_macro _KLICKY_VARIABLES"].retries %}
    {% for i in range(retries) %}
      __RETRY_DOCK I={i} RETRIES={retries}
      {% if i < retries - 1 %}
        _CHECK_PROBE action=query
      {% else %}
        _CHECK_PROBE action=dock
      {% endif %}
    {% endfor %}
  {% endif %}

[gcode_macro __RETRY_DOCK]
gcode:
  {% set i = params.I|default(0)|int %}
  {% set retries = params.RETRIES|default(0)|int %}
  {% if printer["gcode_macro _KLICKY_DATABASE"].probe_attached %}
    RESPOND MSG="Retry {i + 1}/{retries}" color=error

    ___ATTACH_PROBE FORCE_ATTACH=TRUE
    ___DOCK_PROBE FORCE_DOCK=TRUE
  {% endif %}

[gcode_macro ___DOCK_PROBE]
gcode:
  {% set FORCE_DOCK = params.FORCE_DOCK|default('FALSE')|string %}
  {% if printer["gcode_macro _KLICKY_DATABASE"].probe_attached or FORCE_DOCK|upper == 'TRUE' %}
    _Move_To_Dock
    {% set order = printer["gcode_macro _KLICKY_VARIABLES"].dock_probe_order.split(',') %}

    {% if order[0]|upper == 'X' %}
        G0 X{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[0]} F2500
    {% else %}
        G0 Y{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[1]} F2500
    {% endif %}

    {% if order[1]|upper == 'X' %}
        G0 X{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[0]} F2500
    {% else %}
        G0 Y{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[1]} F2500
    {% endif %}
  {% else %}
    RESPOND MSG="Probe already docked" COLOR=warning
  {% endif %}



[gcode_macro M401]
gcode:
    ATTACH_PROBE {% for p in params
        %}{'%s=%s ' % (p, params[p])}{%
        endfor %}

[gcode_macro M402]
gcode:
    DOCK_PROBE {% for p in params
        %}{'%s=%s ' % (p, params[p])}{%
        endfor %}


[gcode_macro LOCK_KLICKY_ATTACHING]
variable_value: 0
gcode:
  {% if 'VALUE' not in params %}
    {action_raise_error("Parameter 'VALUE' missing from 'LOCK_KLICKY_ATTACHING'")}
  {% endif %}
  {% set state = params.VALUE|int %}
  {% if state %}
    SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=attaching_locked VALUE={ True }
  {% else %}
    SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=attaching_locked VALUE={ False }
  {% endif %}

  # _SET_STATUS_LIGHT
    

  # Update the state of our variable.  This will inform Moonraker that
  # the device has changed its state.
  SET_GCODE_VARIABLE MACRO=LOCK_KLICKY_ATTACHING VARIABLE=value value={state}


[gcode_macro LOCK_KLICKY_DOCKING]
variable_value: 0
gcode:
  {% if 'VALUE' not in params %}
    {action_raise_error("Parameter 'VALUE' missing from 'LOCK_KLICKY_DOCKING'")}
  {% endif %}
  {% set state = params.VALUE|int %}
  {% if state %}
    SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=docking_locked VALUE={ True }
  {% else %}
    SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=docking_locked VALUE={ False }
  {% endif %}

  # _SET_STATUS_LIGHT

  # Update the state of our variable.  This will inform Moonraker that
  # the device has changed its state.
  SET_GCODE_VARIABLE MACRO=LOCK_KLICKY_DOCKING VARIABLE=value value={state}


[gcode_macro LOCK_PROBE]
gcode:
    LOCK_KLICKY_ATTACHING VALUE=1
    LOCK_KLICKY_DOCKING VALUE=1

[gcode_macro UNLOCK_PROBE]
gcode:
    LOCK_KLICKY_ATTACHING VALUE=0
    LOCK_KLICKY_DOCKING VALUE=0

[gcode_macro LOCK_ATTACHING]
gcode:
    LOCK_KLICKY_ATTACHING VALUE=1

[gcode_macro UNLOCK_ATTACHING]
gcode:
    LOCK_KLICKY_ATTACHING VALUE=0

[gcode_macro LOCK_DOCKING]
gcode:
    LOCK_KLICKY_DOCKING VALUE=1

[gcode_macro UNLOCK_DOCKING]
gcode:
    LOCK_KLICKY_DOCKING VALUE=0
