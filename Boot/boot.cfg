[delayed_gcode BOOT]
# initial_duration: 2.5
gcode:
  SET_FILAMENT_SENSOR SENSOR=Runout ENABLE=0

  RUN_SHELL_COMMAND CMD=TELEGRAM_BOT_START

  _INIT_SHUTDOWN_AFTER_PRINT
  _INIT_DISABLE_LIGHTS_AFTER_PRINT

  _CHECK_PROBE action=query

  RESPOND MSG="Printer online" COLOR=success

  ADJUST_M106 ADJUST=35->20|45->30

  GET_DEFAULT_MESH

[gcode_macro BOOT]
gcode:
  SET_FILAMENT_SENSOR SENSOR=Runout ENABLE=0

  RUN_SHELL_COMMAND CMD=TELEGRAM_BOT_START

  _INIT_SHUTDOWN_AFTER_PRINT
  _INIT_DISABLE_LIGHTS_AFTER_PRINT

  _CHECK_PROBE action=query

  RESPOND MSG="Printer online" COLOR=success

  ADJUST_M106 ADJUST=35->20|45->30

  GET_DEFAULT_MESH

[pa_test]
size_x: 100   # X dimension tower size  (mm)
size_y: 50    # Y dimension tower size  (mm)
height: 50    # Height of tower (mm)
origin_x: 100 # Center of the bed in X
origin_y: 100 # Center of the bed in Y
layer_height: 0.2 # mm
first_layer_height: 0.24 # mm
perimeters: 2 # Number of perimeters to be printed for the tower
brim_width: 6 # Width of brim (mm)
slow_velocity:   20 # Slowest velocity for PA test segment (mm/s)
medium_velocity: 50 # Medium velocity for PA test segment (mm/s)
fast_velocity:  150 # End velocity for PA test segment (mm/s)
filament_diameter: 1.75

[delayed_gcode start_pa_test]
gcode:
    {% set vars = printer["gcode_macro RUN_PA_TEST"] %}
    RESPOND MSG="start_pa_test"
    RESPOND MSG="{vars.bed_temp}"
    RESPOND MSG="{vars.hotend_temp}"

[delayed_gcode end_pa_test]
gcode:
    END_PRINT
    RESTORE_GCODE_STATE NAME=PA_TEST_STATE

[gcode_macro RUN_PA_TEST]
variable_bed_temp: -1
variable_hotend_temp: -1
variable_pa_value: 0             # Used for further tuning of pa value. If value is not 0 than the tested pa value will only be +/- (determined by the pa_range variable) around of the pa_value variable
variable_pa_range: 0.03          # Only use if pa_value is set to heigher than 0. Used to set the +/- area around pa_value that should be tested
variable_flow_rate: -1
variable_testparam: 0            # 0 = advance, 1 = offset, 2 = time_offset
variable_rawparams: ''
gcode:
    # Fail early if the required parameters are not provided
    {% if params.NOZZLE is not defined %}
    {action_raise_error('NOZZLE= parameter must be provided')}
    {% endif %}
    {% if params.TARGET_TEMP is not defined %}
    {action_raise_error('TARGET_TEMP= parameter must be provided')}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=bed_temp VALUE={params.BED_TEMP|default(60)}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=hotend_temp VALUE="{params.TARGET_TEMP}"
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=pa_value VALUE={params.PA_VALUE|default(0)}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=pa_range VALUE={params.PA_RANGE|default(0.01)}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=flow_rate VALUE={params.FLOW_RATE|default(-1)}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=testparam VALUE={params.TESTPARAM|default(0)}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=rawparams VALUE="'{rawparams}'"
    SAVE_GCODE_STATE NAME=PA_TEST_STATE
    UPDATE_DELAYED_GCODE ID=start_pa_test DURATION=0.01
